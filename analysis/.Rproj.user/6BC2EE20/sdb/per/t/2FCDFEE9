{
    "collab_server" : "",
    "contents" : "library(tidyverse)\nlibrary(reshape2)\nlibrary(fmsb)\n\ndata <- read.csv(\"data/arginine_data.csv\")\n\nadData <- data %>% filter(Name == \"AD\") %>% select (\"Name\", \"Arginine\", \"Citrulline\", \"Ornithine\", \"Proline\")\ncaaData <- data %>% filter(Name == \"CAA\") %>% select (\"Arginine\", \"Citrulline\", \"Ornithine\", \"Proline\")\ncontrolData <- data %>% filter(Name == \"CONTROL\") %>% select (\"Name\", \"Arginine\", \"Citrulline\", \"Ornithine\", \"Proline\")\n\ndata <- rbind(adData, controlData)\ndata$Name <- factor(data$Name)\n\n# AD means and standard deviations\narginineAD <- adData%>% select (\"Arginine\") %>% unlist\ncitrullineAD <- adData %>% select (\"Citrulline\") %>% unlist\nornithineAD <- adData %>% select (\"Ornithine\") %>% unlist\nprolineAD <- adData %>% select (\"Proline\") %>% unlist\n\nargMeanAD <- mean(arginineAD)\nargSDAD <- sd(arginineAD)\n\ncitrullineMeanAD <- mean(citrullineAD)\ncitrullineSDAD <- sd(citrullineAD)\n\nornithineMeanAD <- mean(ornithineAD)\nornithineSDAD <- sd(ornithineAD)\n\nprolineMeanAD <- mean(prolineAD)\nprolineSDAD <- sd(prolineAD)\n\n# CAA means and standard deviations\narginineCAA <- caaData%>% select (\"Arginine\") %>% unlist\ncitrullineCAA <- caaData %>% select (\"Citrulline\") %>% unlist\nornithineCAA <- caaData %>% select (\"Ornithine\") %>% unlist\nprolineCAA <- caaData %>% select (\"Proline\") %>% unlist\n\nargMeanCAA <- mean(arginineCAA)\nargSDCAA <- sd(arginineCAA)\n\ncitrullineMeanCAA <- mean(citrullineCAA)\ncitrullineSDCAA <- sd(citrullineCAA)\n\nornithineMeanCAA <- mean(ornithineCAA)\nornithineSDCAA <- sd(ornithineCAA)\n\nprolineMeanCAA <- mean(prolineCAA)\nprolineSDCAA <- sd(prolineCAA)\n\n# Control means and standard deviations\narginineControl <- controlData%>% select (\"Arginine\") %>% unlist\ncitrullineControl <- controlData %>% select (\"Citrulline\") %>% unlist\nornithineControl <- controlData %>% select (\"Ornithine\") %>% unlist\nprolineControl <- controlData %>% select (\"Proline\") %>% unlist\n\nargMeanControl <- mean(arginineControl)\nargSDControl <- sd(arginineControl)\n\ncitrullineMeanControl <- mean(citrullineControl)\ncitrullineSDControl <- sd(citrullineControl)\n\nornithineMeanControl <- mean(ornithineControl)\nornithineSDControl <- sd(ornithineControl)\n\nprolineMeanControl <- mean(prolineControl)\nprolineSDControl <- sd(prolineControl)\n\n# Combining data into table\nadMeanSD <- data.frame(c(\"L-arginine\", \"Citrulline\", \"Ornithine\", \"Proline\"), \n                       c(argMeanAD, citrullineMeanAD, ornithineMeanAD, prolineMeanAD),\n                       c(argMeanControl, citrullineMeanControl, ornithineMeanControl, prolineMeanControl),\n                       c(argSDAD, citrullineSDAD, ornithineSDAD, prolineSDAD),\n                       c(argSDControl, citrullineSDControl, ornithineSDControl, prolineSDControl))\ncolnames(adMeanSD) <- c(\"Metabolite\", \"AD Mean\",\"Control Mean\",\"AD Standard Deviation\", \"Control Standard Deviation\")\n\n# Test normality of data https://stats.stackexchange.com/questions/101274/how-to-interpret-a-qq-plot\nqqnorm(arginineAD, main = \"Q-Q Plot for L-arginine\")\nqqline(arginineAD) # Approximately normal\n\nqqnorm(citrullineAD, main = \"Q-Q Plot for Citrulline\")\nqqline(citrullineAD) # Light tailed\n\nqnorm(ornithineAD, main = \"Q-Q Plot for Ornithine\")\nqqline(ornithineAD) # NaN are produced, not sure if this \n\nqnorm(prolineAD) #NaN produced\nqqline(prolineAD)\n\n#f test on variances \nvar.test(arginineAD, arginineControl, alternative = \"two.sided\")\nvar.test(citrullineAD, citrullineControl, alternative = \"two.sided\")\nvar.test(ornithineAD, ornithineControl, alternative = \"two.sided\")\nvar.test(prolineAD, prolineControl, alternative = \"two.sided\")\n\n# 2-sample T-test\npArg <- t.test(arginineAD, arginineControl)\npOrn <- t.test(ornithineAD, ornithineControl, var.equal = TRUE)\npCit <- t.test(citrullineAD, citrullineControl, var.equal = TRUE)\npProEqual <- t.test(prolineAD, prolineControl, var.equal = TRUE)\npProUnequal <- t.test(prolineAD, prolineControl)\n\n# Heatmaps\ncormat <- round(cor(adData),2) #Correlation matrix\n\nget_lower_tri <- function(cormat) {\n  cormat[upper.tri(cormat)] <- NA\n  return (cormat)\n}\n\nget_upper_tri <- function(cormat) {\n  cormat[lower.tri(cormat)] <- NA\n  return (cormat)\n}\n\nupper_tri <- get_upper_tri(cormat)\nmelted_cormat <- melt(upper_tri, na.rm = TRUE)\nggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+\n  geom_tile(color = \"white\")+\n  scale_fill_gradient2(low = \"blue\", high = \"red\", mid = \"white\", \n                       midpoint = 0, limit = c(-1,1), space = \"Lab\", \n                       name=\"Pearson\\nCorrelation\") +\n  theme_minimal()+ \n  theme(axis.text.x = element_text(angle = 45, vjust = 1, \n                                   size = 12, hjust = 1))+\n  coord_fixed() +\n  geom_text(aes(Var2, Var1, label = value), color = \"black\", size = 4) +\n  ggtitle(\"Correlation Heatmap of Metabolites\")\n  \n\n# Density plots\ndensity_data_ad <- data %>% select(\"Name\", \"Arginine\")\ndensity_data_ad[,\"Name\"] <- as.factor(density_data_ad[,\"Name\"])\ndensity_data_ad[,\"Condition\"] <- density_data_ad[,\"Name\"]\nggplot(density_data_ad, aes(x = Arginine, color = Condition)) + geom_density(alpha = 0.4) +\n  xlab(NULL) + ylab(NULL)\n\ndensity_data_orn <- data %>% select(\"Name\", \"Ornithine\")\ndensity_data_orn[,\"Name\"] <- as.factor(density_data_orn[,\"Name\"])\ndensity_data_orn[,\"Condition\"] <- density_data_orn[,\"Name\"]\nggplot(density_data_orn, aes(x = Ornithine, color = Condition)) + geom_density(alpha = 0.4)+\n  labs(x = NULL, y = NULL)\n\ndensity_data_cit <- data %>% select(\"Name\", \"Citrulline\")\ndensity_data_cit[,\"Name\"] <- as.factor(density_data_cit[,\"Name\"])\ndensity_data_cit[,\"Condition\"] <- density_data_cit[,\"Name\"]\nggplot(density_data_cit, aes(x = Citrulline, color = Condition)) + geom_density(alpha = 0.4)+\n  labs(x = NULL, y = NULL)\n\ndensity_data_pro <- data %>% select(\"Name\", \"Proline\")\ndensity_data_pro[,\"Name\"] <- as.factor(density_data_pro[,\"Name\"])\ndensity_data_pro[,\"Condition\"] <- density_data_pro[,\"Name\"]\nggplot(density_data_pro, aes(x = Proline, color = Name)) + geom_density(alpha = 0.4)+\n  labs(x = NULL, y = NULL)\n\n# Boxplot\nboxplot(Arginine ~ Name, data, main = NULL, \n        xlab = \"Condition\", ylab = \"Relative Concentration\",\n        col = c(\"red\", \"lightblue\"))\n\nboxplot(Ornithine ~ Name, data, main = \"Ornithine Changes in AD and Control\", \n        xlab = \"Condition\", ylab = \"Relative Concentration\",\n        col = c(\"red\", \"lightblue\"))\n\nboxplot(Citrulline ~ Name, data, main = \"Citrulline Changes in AD and Control\", \n        xlab = \"Condition\", ylab = \"Relative Concentration\",\n        col = c(\"red\", \"lightblue\"))\n\nboxplot(Proline ~ Name, data, main = \"Proline Changes in AD and Control\", \n        xlab = \"Condition\", ylab = \"Relative Concentration\",\n        col = c(\"red\", \"lightblue\"))\n\n# Violin plots: combining density and boxplots\nggplot(data, aes(x = Name, y = Arginine, fill = Name)) + geom_violin(draw_quantiles = TRUE) + \n  geom_boxplot(width = 0.1) +\n  labs(title = \"Arginine in AD and Control\")\n\nggplot(data, aes(x = Name, y = Ornithine, fill = Name)) + geom_violin(draw_quantiles = TRUE) + \n  geom_boxplot(width = 0.1) +\n  labs(title = \"Ornithine in AD and Control\")\n\nggplot(data, aes(x = Name, y = Citrulline, fill = Name)) + geom_violin(draw_quantiles = TRUE) + \n  geom_boxplot(width = 0.1) +\n  labs(title = \"Citrulline in AD and Control\")\n\nggplot(data, aes(x = Name, y = Proline, fill = Name)) + geom_violin(draw_quantiles = TRUE) + \n  geom_boxplot(width = 0.1) +\n  labs(title = \"Proline in AD and Control\")\n\n# Visualizing covariates\nnewData <- read.csv(\"covariate-arginine.csv\")\nnewData <- subset(newData, select = c(-X, -Subject.ID) )\nnewData$Female <- as.factor(newData$Female)\n\nnewDataAD <- newData %>% filter(Name == \"AD\")\nnewDataControl <- newData %>% filter(Name == \"CONTROL\")\n\nggplot(newDataAD, aes(x = Arginine, y = Memory, color = Female)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\") +\n  labs(title = \"L-arginine vs Memory Scores\") # No significant relation\n\nmemory_model <- lm(Memory ~ Arginine, data = newData)\nsummary(memory_model)\n  \nggplot(newDataAD, aes(x = Arginine, y = Age, color = Female)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\") +\n  labs(title = \"L-arginine vs Age\") # No significant relation\n\nage_model <- lm(Age ~ Arginine, data = newData)\nsummary(age_model)\n\nggplot(newDataAD, aes(x = Arginine, y = Exec, color = Female)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\") +\n  labs(title = \"L-arginine vs Executive Scores\") # Some clusters\n\nexec_model <- lm (Exec ~ Arginine, data = newData)\nsummary(exec_model)\n\nggplot(newDataAD, aes(x = Arginine, y = Speed, color = Female)) +\n  geom_point() +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"black\") +\n  labs(title = \"L-arginine vs Speed Scores\") # No significant relation\n\nspeed_model <- lm(Speed ~ Arginine, data = newData)\nsummary(speed_model)\n\nggplot(newDataAD, aes(x = Female, y = Arginine, fill = Female)) +\n  geom_boxplot() + \n  labs(title = \"L-arginine vs Gender\")\n\nadMemoryMean <- mean(newDataAD %>% select (\"Memory\") %>% unlist)\nadSpeedMean <- mean(newDataAD %>% select (\"Speed\") %>% unlist)\nadExecutiveMean <- mean(newDataAD %>% select (\"Exec\") %>% unlist)\n\nadMemorySD <- sd(newDataAD %>% select (\"Memory\") %>% unlist)\nadSpeedSD <- sd(newDataAD %>% select (\"Speed\") %>% unlist)\nadExecutiveSD <- sd(newDataAD %>% select (\"Exec\") %>% unlist)\n\ncontrolMemoryMean <- mean(newDataControl %>% select(\"Memory\") %>% unlist)\ncontrolSpeedMean <- mean(newDataControl %>% select(\"Speed\") %>% unlist)\ncontrolExecutiveMean <- mean(newDataControl %>% select(\"Exec\") %>% unlist)\n\ncontrolMemorySD <- sd(newDataControl %>% select(\"Memory\") %>% unlist)\ncontrolSpeedSD <- sd(newDataControl %>% select(\"Speed\") %>% unlist)\ncontrolExecutiveSD <- sd(newDataControl %>% select(\"Exec\") %>% unlist)\n\n# Testing normality\nshapiro.test(adData$Arginine) #p: 0.2343\nshapiro.test(adData$Citrulline) #p: 0.04248\nshapiro.test(adData$Ornithine) # p: 0.007392\nshapiro.test(adData$Proline) #p: 0.005537\n",
    "created" : 1526059223411.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1963268897",
    "id" : "2FCDFEE9",
    "lastKnownWriteTime" : 1521842352,
    "last_content_update" : 1521842352,
    "path" : "~/Documents/Science Fair /Grade 11/Data Analysis/Data Analysis/script.R",
    "project_path" : "script.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}